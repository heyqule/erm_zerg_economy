---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 2/25/2025 1:31 PM
---
--- Create zerg recipe and items
---
local ArmyEconomyHelper = require('__erm_libs__/prototypes/army_economy_helper')
local ZergItemRecipe = {}

function ZergItemRecipe.zergling(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'zergling',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/zergling.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 20,
        weight = 50,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'zergling',
        energy_required = 24,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 2
    })
end

function ZergItemRecipe.hydralisk(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'hydralisk',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/hydralisk.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 20,
        weight = 100,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'hydralisk',
        energy_required = 25,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 1
    })
end

function ZergItemRecipe.mutalisk(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'mutalisk',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/mutalisk.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 20,
        weight = 100,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'mutalisk',
        energy_required = 30,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 1
    })
end

function ZergItemRecipe.guardian(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'guardian',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/guardian.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 10,
        weight = 200,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'guardian',
        energy_required = 60,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 1
    })
end

function ZergItemRecipe.infested(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'infested',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/infested.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 20,
        weight = 500,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'infested',
        energy_required = 30,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 1
    })
end

function ZergItemRecipe.ultralisk(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'ultralisk',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/units/ultralisk.png",
        subgroup = prefix.."--erm_controllable",
        stack_size = 10,
        weight = 500,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'ultralisk',
        energy_required = 60,
        ingredients = ingredients,
        category = prefix.."--erm_controllable",
        amount = 1
    })
end

function ZergItemRecipe.hatchery(prefix, ingredients)
    ArmyEconomyHelper.create_item({
        prefix = prefix,
        name = 'hatchery',
        icon = "__erm_zerg_hd_assets__/graphics/entity/icons/buildings/advisor.png",
        subgroup = "erm_controllable_buildings",
        stack_size = 5,
        weight = 10000,
    })

    ArmyEconomyHelper.create_recipe({
        prefix = prefix,
        name = 'hatchery',
        energy_required = 60,
        ingredients = ingredients,
        category = "erm_controllable_buildings",
        amount = 1
    })
end

function ZergItemRecipe.technologies(prefix)
    data:extend({
        {
            type = "technology",
            name = prefix .. "--controllable-unlock",
            order = prefix .. "--controllable-unlock",
            icon_size = 64,
            icon = "__erm_zerg_hd_assets__/graphics/entity/icons/buildings/advisor.png",
            effects =
            {
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--hatchery"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--zergling"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--hydralisk"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--mutalisk"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--guardian"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--infested"
                },
                {
                    type = "unlock-recipe",
                    recipe = prefix .. "--controllable--ultralisk"
                },
            },
            prerequisites = {"military-4","military-science-pack"},
            unit =
            {
                ingredients =
                {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"military-science-pack", 1},
                    {"utility-science-pack", 1},
                    {"space-science-pack", 1},
                    {"metallurgic-science-pack", 1},
                    {"agricultural-science-pack", 1},
                    {"electromagnetic-science-pack", 1},
                    {"cryogenic-science-pack", 1},
                },
                time = 60,
                count = 1000
            },
        },
        {
            type = "technology",
            name = prefix .. "--controllable-damage",
            order = prefix .. "--controllable-damage",
            icon_size = 64,
            icon = "__erm_zerg_hd_assets__/graphics/entity/icons/buildings/advisor.png",
            effects =
            {
                {
                    type = "ammo-damage",
                    ammo_category = prefix.."--erm_controllable",
                    modifier = 0.2
                }
            },
            prerequisites = {prefix .. "--controllable-unlock"},
            unit =
            {
                count_formula = "2^(L)*2500",
                ingredients =
                {
                    {"automation-science-pack", 1},
                    {"logistic-science-pack", 1},
                    {"chemical-science-pack", 1},
                    {"military-science-pack", 1},
                    {"utility-science-pack", 1},
                    {"space-science-pack", 1},
                    {"metallurgic-science-pack", 1},
                    {"agricultural-science-pack", 1},
                    {"electromagnetic-science-pack", 1},
                    {"cryogenic-science-pack", 1},
                    {"promethium-science-pack", 1}
                },
                time = 60,
            },
            max_level = 10,
            upgrade = true
        },
    })
end

return ZergItemRecipe